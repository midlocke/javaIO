package com.Basic.demo005;

/**
 * Created by lichao on 2017/10/16.
 */
public class Describe {

    //类的加载的最终产品是位于堆区的class对象
    //而class对象又封装了类在方法区中的数据结构，并且向Java程序员提供了访问方法区内数据结构的接口

    //ClassLoad加载class文件时，会将class文件对应的数据结构在方法区生成，同时会在堆区生成class对象。

    //两种类型的类加载器
    //java虚拟机自带的加载器
    //--根加载器（Bootstrap）(c++ 程序员无法在java代码中获得该类)
    //--扩展类加载器(Extension)(java)
    //--系统类加载器（System）(java)（也叫应用加载器）
    //用户自定义的类加载器--都是java.lang.ClassLoader的子类
    //--用户可以定制类的加载方式

    //类加载器并不需要等到某个类被“首次主动使用”时再加载它

    //JVM允许在预料到某个类将要使用时就预先加载它，如果遇到.class文件存在错误或缺失
    //类加载器必须在程序首次主动使用该类时才报告错误(LinkageError错误)

    //如果这个类一直没有被程序主动使用，那么类加载器就不会报告错误

    //链接：将已经读入到内存的类的二进制数据合并到虚拟机的运行时环境中去
    //验证：类文件的机构检查，语义检查，字节码验证，二进制兼容性的验证
}
